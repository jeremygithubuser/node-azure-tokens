var jwkToPem = require('jwk-to-pem');
var jwt = require('jsonwebtoken');
var forge = require('node-forge');
var jwkOptions = { private: false };
var jwtOptions = { ignoreExpiration:true , algorithms: ['RS256'] };
var fs = require('fs');

var oldToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1uQ19WWmNBVGZNNXBPWWlKSE1iYTlnb0VLWSIsImtpZCI6Ik1uQ19WWmNBVGZNNXBPWWlKSE1iYTlnb0VLWSJ9.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20vIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDU0MGZjMmUtZGIyNC00YWQ3LThjNTEtOTlmMDBiMTNmMTM0LyIsImlhdCI6MTQ0ODc2MTk0NSwibmJmIjoxNDQ4NzYxOTQ1LCJleHAiOjE0NDg3NjU4NDUsImFjciI6IjEiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiYWQzY2Y1Y2QtMDUxMi00MWE3LThiNWQtMmQ4ODhhOTUxYWIwIiwiYXBwaWRhY3IiOiIxIiwiZmFtaWx5X25hbWUiOiJCb3V2aWVyIiwiZ2l2ZW5fbmFtZSI6ImplcmVteSIsImlwYWRkciI6IjE2Mi4yNTAuNDYuMTMwIiwibmFtZSI6ImplcmVteSBCb3V2aWVyIiwib2lkIjoiNTVjNzZkMGYtYzk4NS00OTk0LWEyY2YtNDAyZjQ2YmExODI1IiwicHVpZCI6IjEwMDM3RkZFOEM5RUZBODgiLCJzY3AiOiJDYWxlbmRhcnMuUmVhZCBDYWxlbmRhcnMuUmVhZFdyaXRlIENvbnRhY3RzLlJlYWQgQ29udGFjdHMuUmVhZFdyaXRlIERpcmVjdG9yeS5BY2Nlc3NBc1VzZXIuQWxsIERpcmVjdG9yeS5SZWFkLkFsbCBEaXJlY3RvcnkuUmVhZFdyaXRlLkFsbCBGaWxlcy5SZWFkIEZpbGVzLlJlYWQuQWxsIEZpbGVzLlJlYWQuU2VsZWN0ZWQgRmlsZXMuUmVhZFdyaXRlIEZpbGVzLlJlYWRXcml0ZS5BbGwgRmlsZXMuUmVhZFdyaXRlLkFwcEZvbGRlciBGaWxlcy5SZWFkV3JpdGUuU2VsZWN0ZWQgR3JvdXAuUmVhZC5BbGwgR3JvdXAuUmVhZFdyaXRlLkFsbCBNYWlsLlJlYWQgTWFpbC5SZWFkV3JpdGUgTWFpbC5TZW5kIE5vdGVzLkNyZWF0ZSBOb3Rlcy5SZWFkIE5vdGVzLlJlYWQuQWxsIE5vdGVzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIE5vdGVzLlJlYWRXcml0ZS5DcmVhdGVkQnlBcHAgb2ZmbGluZV9hY2Nlc3Mgb3BlbmlkIFBlb3BsZS5SZWFkIFNpdGVzLlJlYWQuQWxsIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWQgVXNlci5SZWFkLkFsbCBVc2VyLlJlYWRCYXNpYy5BbGwgVXNlci5SZWFkV3JpdGUgVXNlci5SZWFkV3JpdGUuQWxsIiwic3ViIjoiLXR0a0wyMFdZNHB3dnI4WWZoMG11M2hCaHI1UTJueklKdWFJbkdhTzBaayIsInRpZCI6ImQ1NDBmYzJlLWRiMjQtNGFkNy04YzUxLTk5ZjAwYjEzZjEzNCIsInVuaXF1ZV9uYW1lIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidXBuIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidmVyIjoiMS4wIn0.N80inw_9InUgtGncoqyTniiQQq03NPpF1FwLMxoU2rzmNDnBIopyvChfjqtzknVWBHuRQrDewdPt2i5_8YICNlmCnm749Zt3Ahz0B9tcXm_kEfmvVWBWG7V52G9vuJ2O7gXK7SvfhDGJW9fpOeQki-nqhsm66BS32Ih_s4saKzo6tV5V8-ctgqKchWo2LUxYSMppSTizy42P_3tWlBlVbfZeVOIoEIBJalwrUDU-gB_Y8kfKKVuzbnKesR1oJBV2p5rTdahiK8ZRJroD3bH6ZWbCP6Omq7rtKbQbaylTyKV9d-ud2ZI3MdnoUHinMwpdJOz1NVOqU9J3R7T1iBQFPQ";

var accesToken = "eyJ0eXAiOiJKV1QiLCJub25jZSI6IkFRQUJBQUFBQUFEUk5ZUlEzZGhSU3JtLTRLLWFkcENKOGZXbjJXa2c3emd0MWhUYW0wMkt6UkhCdDhJWTN1d2dmU2dXVjhQRld1ZlBkNkxLQjlSOVpfV1c1aDRrWmN5amlCNGtITjBFRW9Ndjc1N1VrY2pFUnlBQSIsImFsZyI6IlJTMjU2IiwieDV0IjoiWWJSQVFSWWNFX21vdFdWSktIcndMQmJkXzlzIiwia2lkIjoiWWJSQVFSWWNFX21vdFdWSktIcndMQmJkXzlzIn0.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20vIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDU0MGZjMmUtZGIyNC00YWQ3LThjNTEtOTlmMDBiMTNmMTM0LyIsImlhdCI6MTQ3NTY4NzU5NSwibmJmIjoxNDc1Njg3NTk1LCJleHAiOjE0NzU2OTE0OTUsImFjciI6IjEiLCJhbXIiOlsicHdkIl0sImFwcF9kaXNwbGF5bmFtZSI6Im93aW5zZWxmaG9zdGVkIiwiYXBwaWQiOiJmZDliODY5Mi1iOTU1LTQwZTctOTI3ZS01MTJlZGU1Yzk4MzUiLCJhcHBpZGFjciI6IjEiLCJmYW1pbHlfbmFtZSI6IkJvdXZpZXIiLCJnaXZlbl9uYW1lIjoiamVyZW15IiwiaXBhZGRyIjoiNjQuODYuMTQxLjE0MSIsIm5hbWUiOiJqZXJlbXkgQm91dmllciIsIm9pZCI6IjU1Yzc2ZDBmLWM5ODUtNDk5NC1hMmNmLTQwMmY0NmJhMTgyNSIsInBsYXRmIjoiV2luIiwicHVpZCI6IjEwMDM3RkZFOEM5RUZBODgiLCJzY3AiOiJvcGVuaWQgVXNlci5SZWFkIiwic3ViIjoiLXR0a0wyMFdZNHB3dnI4WWZoMG11M2hCaHI1UTJueklKdWFJbkdhTzBaayIsInRpZCI6ImQ1NDBmYzJlLWRiMjQtNGFkNy04YzUxLTk5ZjAwYjEzZjEzNCIsInVuaXF1ZV9uYW1lIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidXBuIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidmVyIjoiMS4wIn0.JHE7wsoUGaUhXb7h6H89iBnkPz_zohM5hSyXsvEb2MRlKm-gPLDoOBW-fEdiSu_dpJPPLUI28TUOd2CisQxUUTTzRa4kJLKhChXIhbZNImNQvSFWyZdm5Wu4ta-d5hf5wOy7rNOOL4kPQYz9aRlz0fUHMhUYRMVcktpdddvHE9QpDRgOvoFO3vmtM7hbo3aOAcpuSYqxfkH3AC8g3UaaG1bheVoDcnyCQIGqXKWvT9ExAOpfU5CAR_I9V85fypv5tv6-QdnEBquU4F17hQ9a4Tke3crZJk_-eM7UW0NxRW94ofnd3vZDvB-2RqRqyPYNzRI5PSmjZI1CtsHEmfI_Sw";

var accesToken2 = "eyJ0eXAiOiJKV1QiLCJub25jZSI6IkFRQUJBQUFBQUFEUk5ZUlEzZGhSU3JtLTRLLWFkcENKOGZXbjJXa2c3emd0MWhUYW0wMkt6UkhCdDhJWTN1d2dmU2dXVjhQRld1ZlBkNkxLQjlSOVpfV1c1aDRrWmN5amlCNGtITjBFRW9Ndjc1N1VrY2pFUnlBQSIsImFsZyI6IlJTMjU2IiwieDV0IjoiWWJSQVFSWWNFX21vdFdWSktIcndMQmJkXzlzIiwia2lkIjoiWWJSQVFSWWNFX21vdFdWSktIcndMQmJkXzlzIn0.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20vIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDU0MGZjMmUtZGIyNC00YWQ3LThjNTEtOTlmMDBiMTNmMTM0LyIsImlhdCI6MTQ3NTY4NzU5NSwibmJmIjoxNDc1Njg3NTk1LCJleHAiOjE0NzU2OTE0OTUsImFjciI6IjEiLCJhbXIiOlsicHdkIl0sImFwcF9kaXNwbGF5bmFtZSI6Im93aW5zZWxmaG9zdGVkIiwiYXBwaWQiOiJmZDliODY5Mi1iOTU1LTQwZTctOTI3ZS01MTJlZGU1Yzk4MzUiLCJhcHBpZGFjciI6IjEiLCJmYW1pbHlfbmFtZSI6IkJvdXZpZXIiLCJnaXZlbl9uYW1lIjoiamVyZW15IiwiaXBhZGRyIjoiNjQuODYuMTQxLjE0MSIsIm5hbWUiOiJqZXJlbXkgQm91dmllciIsIm9pZCI6IjU1Yzc2ZDBmLWM5ODUtNDk5NC1hMmNmLTQwMmY0NmJhMTgyNSIsInBsYXRmIjoiV2luIiwicHVpZCI6IjEwMDM3RkZFOEM5RUZBODgiLCJzY3AiOiJvcGVuaWQgVXNlci5SZWFkIiwic3ViIjoiLXR0a0wyMFdZNHB3dnI4WWZoMG11M2hCaHI1UTJueklKdWFJbkdhTzBaayIsInRpZCI6ImQ1NDBmYzJlLWRiMjQtNGFkNy04YzUxLTk5ZjAwYjEzZjEzNCIsInVuaXF1ZV9uYW1lIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidXBuIjoiamVyZW15QGplcmVteUNvcnAub25taWNyb3NvZnQuY29tIiwidmVyIjoiMS4wIn0.JHE7wsoUGaUhXb7h6H89iBnkPz/zohM5hSyXsvEb2MRlKm+gPLDoOBW+fEdiSu/dpJPPLUI28TUOd2CisQxUUTTzRa4kJLKhChXIhbZNImNQvSFWyZdm5Wu4ta+d5hf5wOy7rNOOL4kPQYz9aRlz0fUHMhUYRMVcktpdddvHE9QpDRgOvoFO3vmtM7hbo3aOAcpuSYqxfkH3AC8g3UaaG1bheVoDcnyCQIGqXKWvT9ExAOpfU5CAR/I9V85fypv5tv6+QdnEBquU4F17hQ9a4Tke3crZJk/+eM7UW0NxRW94ofnd3vZDvB+2RqRqyPYNzRI5PSmjZI1CtsHEmfI/Sw";

var jwkAzure = {
    "kty": "RSA",
    "n": "vbcFrj193Gm6zeo5e2_y54Jx49sIgScv-2JO-n6NxNqQaKVnMkHcz-S1j2FfpFngotwGMzZIKVCY1SK8SKZMFfRTU3wvToZITwf3W1Qq6n-h-abqpyJTaqIcfhA0d6kEAM5NsQAKhfvw7fre1QicmU9LWVWUYAayLmiRX6o3tktJq6H58pUzTtx_D0Dprnx6z5sW-uiMipLXbrgYmOez7htokJVgDg8w-yDFCxZNo7KVueUkLkxhNjYGkGfnt18s7ZW036WoTmdaQmW4CChf_o4TLE5VyGpYWm7I_-nV95BBvwlzokVVKzveKf3l5UU3c6PkGy-BB3E_ChqFm6sPWw",
    "e": "AQAB"
};

var certString = "MIIC4jCCAcqgAwIBAgIQfQ29fkGSsb1J8n2KueDFtDANBgkqhkiG9w0BAQsFADAtMSswKQYDVQQDEyJhY2NvdW50cy5hY2Nlc3Njb250cm9sLndpbmRvd3MubmV0MB4XDTE2MDQxNzAwMDAwMFoXDTE4MDQxNzAwMDAwMFowLTErMCkGA1UEAxMiYWNjb3VudHMuYWNjZXNzY29udHJvbC53aW5kb3dzLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL23Ba49fdxpus3qOXtv8ueCcePbCIEnL/tiTvp+jcTakGilZzJB3M/ktY9hX6RZ4KLcBjM2SClQmNUivEimTBX0U1N8L06GSE8H91tUKup/ofmm6qciU2qiHH4QNHepBADOTbEACoX78O363tUInJlPS1lVlGAGsi5okV+qN7ZLSauh+fKVM07cfw9A6a58es+bFvrojIqS1264GJjns+4baJCVYA4PMPsgxQsWTaOylbnlJC5MYTY2BpBn57dfLO2VtN+lqE5nWkJluAgoX/6OEyxOVchqWFpuyP/p1feQQb8Jc6JFVSs73in95eVFN3Oj5BsvgQdxPwoahZurD1sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAe5RxtMLU2i4/vN1YacncR3GkOlbRv82rll9cd5mtVmokAw7kwbFBFNo2vIVkun+n+VdJf+QRzmHGm3ABtKwz3DPr78y0qdVFA3h9P60hd3wqu2k5/Q8s9j1Kq3u9TIEoHlGJqNzjqO7khX6VcJ6BRLzoefBYavqoDSgJ3mkkYCNqTV2ZxDNks3obPg4yUkh5flULH14TqlFIOhXbsd775aPuMT+/tyqcc6xohU5NyYA63KtWG1BLDuF4LEF84oNPcY9i0n6IphEGgz20H7YcLRNjU55pDbWGdjE4X8ANb23kAc75RZn9EY4qYCiqeIAg3qEVKLnLUx0fNKMHmuedjg==";

var certString2="MIIC4jCCAcqgAwIBAgIQQNXrmzhLN4VGlUXDYCRT3zANBgkqhkiG9w0BAQsFADAtMSswKQYDVQQDEyJhY2NvdW50cy5hY2Nlc3Njb250cm9sLndpbmRvd3MubmV0MB4XDTE0MTAyODAwMDAwMFoXDTE2MTAyNzAwMDAwMFowLTErMCkGA1UEAxMiYWNjb3VudHMuYWNjZXNzY29udHJvbC53aW5kb3dzLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALyKs/uPhEf7zVizjfcr/ISGFe9+yUOqwpel38zgutvLHmFD39E2hpPdQhcXn4c4dt1fU5KvkbcDdVbP8+e4TvNpJMy/nEB2V92zCQ/hhBjilwhF1ETe1TMmVjALs0KFvbxW9ZN3EdUVvxFvz/gvG29nQhl4QWKj3x8opr89lmq14Z7T0mzOV8kub+cgsOU/1bsKqrIqN1fMKKFhjKaetctdjYTfGzVQ0AJAzzbtg0/Q1wdYNAnhSDafygEv6kNiquk0r0RyasUUevEXs2LY3vSgKsKseI8ZZlQEMtE9/k/iAG7JNcEbVg53YTurNTrPnXJOU88mf3TToX14HpYsS1ECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAfolx45w0i8CdAUjjeAaYdhG9+NDHxop0UvNOqlGqYJexqPLuvX8iyUaYxNGzZxFgGI3GpKfmQP2JQWQ1E5JtY/n8iNLOKRMwqkuxSCKJxZJq4Sl/m/Yv7TS1P5LNgAj8QLCypxsWrTAmq2HSpkeSk4JBtsYxX6uhbGM/K1sEktKybVTHu22/7TmRqWTmOUy9wQvMjJb2IXdMGLG3hVntN/WWcs5w8vbt1i8Kk6o19W2MjZ95JaECKjBDYRlhG1KmSBtrsKsCBQoBzwH/rXfksTO9JoUYLXiW0IppB7DhNH4PJ5hZI91R8rR0H3/bKkLSuDaKLWSqMhozdhXsIIKvJQ==";


// base64-decode DER bytes
var certDerBytes = forge.util.decode64(certString2);

// parse DER to an ASN.1 object
var obj = forge.asn1.fromDer(certDerBytes);

// convert ASN.1 object to forge certificate object
var cert = forge.pki.certificateFromAsn1(obj);

// get forge public key object
var publicKey = cert.publicKey;

// `publicKey` can now be used to verify, encrypt, etc.
/*publicKey.verify(...);
publicKey.encrypt(...);*/

// if you did want to convert it to PEM format for transport:
var pem = forge.pki.publicKeyToPem(publicKey);


fs.writeFile('pk.pem', pem, function (err) {
    if (err) throw err;
    console.log('It\'s saved! in same location.');
    var cert = fs.readFileSync('pk.pem');
    jwt.verify(oldToken, cert, jwtOptions, function (err, decoded) {
        console.log(decoded.foo) // bar
    });
});

/*
var pemPublicKey = jwkToPem(jwkAzure, jwkOptions);
fs.writeFile('pk2.pem', pemPublicKey, function (err) {
    if (err) throw err;
    console.log('It\'s saved! in same location.');
    var cert = fs.readFileSync('pk2.pem');
    jwt.verify(accesToken, cert, jwtOptions, function (err, decoded) {
        console.log(decoded.foo) // bar
    });
});*/




